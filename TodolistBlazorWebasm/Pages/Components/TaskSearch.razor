@using TodolistBlazorWebasm.Services;
@using Todolist.Share.Enum;
@using TodoList.Share;



@if (Assignees != null)
{
    <EditForm Model="@taskListSearch" OnSubmit=@SearchForm>
        <div class="row">
            <div class="col">
                <label>Name</label>
                <InputText class="form-control" @bind-Value="taskListSearch.Name"></InputText>
            </div>

            <div class="col">
                <label>Assignee</label>
                <InputSelect class="form-control" @bind-Value="taskListSearch.AssigneeId">
                    <option>--Select--</option>
                    @foreach (var assignee in Assignees)
                        {
                        <option value="@assignee.Id">@assignee.FullName</option>
                        }
                </InputSelect>
            </div>

            <div class="col">
                <label>Priority</label>
                <InputSelect class="form-control" @bind-Value="taskListSearch.Priority">
                    <option>--Select--</option>
                    @foreach (string item in Enum.GetNames(typeof(Priority)))
                        {
                        <option value="@item">@item</option>
                        }
                </InputSelect>
            </div>

            <div class="col button-top">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
            <div class="col button-top">
                <a href="/taskCreate" class="btn btn-success">Create</a>
            </div>
        </div>
    </EditForm>
}

@code {
    [Inject] private IUserApiClient UserApiClient { set; get; }

    private TaskListSearch taskListSearch  = new TaskListSearch();
    private List<AssigneeDto> Assignees;

    //event callback
    [Parameter]
    public EventCallback<TaskListSearch> OnSearch { get; set; }


    protected async override Task OnInitializedAsync()
    {
        Assignees = await UserApiClient.GetUserList();

    }

    private async Task SearchForm(EditContext context)
    {

        await OnSearch.InvokeAsync(taskListSearch);

    }
}
